package io.github.gusg21.kberry.GUI;

import io.github.gusg21.kberry.kBerry;
import io.github.gusg21.kberry.supp.CLS;
import io.github.gusg21.kberry.supp.TextAreaOutputStream;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.PrintStream;
import java.net.URL;

import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

public class kBerryWrapperGUI extends JFrame {

	/**
	 * Default Serial
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JTextField inKB;
	private JTextField outClass;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					kBerryWrapperGUI frame = new kBerryWrapperGUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public kBerryWrapperGUI() {
		setIconImage(Toolkit.getDefaultToolkit().getImage(kBerryWrapperGUI.class.getResource("/io/github/gusg21/kberry/assets/icon.png")));
		setTitle("kBerry Compiler");
		setResizable(false);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 550, 400);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		
		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		contentPane.add(tabbedPane, BorderLayout.CENTER);
		
		JPanel Compiler = new JPanel();
		tabbedPane.addTab("Compiler", null, Compiler, null);
		Compiler.setLayout(null);
		
		inKB = new JTextField();
		inKB.setText("Input .kb file (full path)");
		inKB.setBounds(10, 5, 507, 20);
		Compiler.add(inKB);
		inKB.setColumns(10);
		
		outClass = new JTextField();
		outClass.setText("Output .java file name (no path; just name)");
		outClass.setColumns(10);
		outClass.setBounds(10, 36, 507, 20);
		Compiler.add(outClass);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 128, 507, 153);
		Compiler.add(scrollPane);
		
		final JTextArea Console = new JTextArea();
		Console.setLocation(0, 176);
		Console.setForeground(new Color(0, 0, 128));
		scrollPane.setViewportView(Console);
		
		JButton btnNewButton = new JButton("GO!");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				CLS.clear(Console);
				kBerry.parse(inKB.getText(), outClass.getText()); // Line you're looking for
			}
		});
		
		btnNewButton.setFont(new Font("Verdana", Font.BOLD, 41));
		btnNewButton.setBounds(10, 69, 507, 47);
		Compiler.add(btnNewButton);
		
		PrintStream out = new PrintStream( new TextAreaOutputStream( Console ) );
		
		JButton btnClearConsole = new JButton("Clear Console");
		btnClearConsole.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				CLS.clear(Console);
			}
		});
		btnClearConsole.setBounds(10, 293, 507, 28);
		Compiler.add(btnClearConsole);
		btnClearConsole.setFont(new Font("Verdana", Font.PLAIN, 14));
		
		// redirect standard output stream to the TextAreaOutputStream
		System.setOut(out);

		// redirect standard error stream to the TextAreaOutputStream
		System.setErrs(out);

		// now test the mechanism
		System.out.println( "kBerry GUI Initiated" );
		
		JPanel paneAbout = new JPanel();
		tabbedPane.addTab("About", null, paneAbout, null);
		paneAbout.setLayout(null);
		
		JEditorPane dtrpnAboutKberryKberry = new JEditorPane();
		dtrpnAboutKberryKberry.setEditable(false);
		dtrpnAboutKberryKberry.setText("About kBerry:\r\nkBerry is a Java-based compiled language made out of pure terribleness. Made as a toy compiler, the entire language is a nice thing to mess with, but completely (and utterly) pointless.");
		dtrpnAboutKberryKberry.setBounds(10, 11, 409, 159);
		paneAbout.add(dtrpnAboutKberryKberry);
		
		JLabel lblHttpgithubcomgusg = new JLabel("<html><u>http://github.com/gusg21</u><html>");
		lblHttpgithubcomgusg.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				openWebpage("https://github.com/gusg21");
			}
		});
		lblHttpgithubcomgusg.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		lblHttpgithubcomgusg.setForeground(Color.BLUE);
		lblHttpgithubcomgusg.setHorizontalAlignment(SwingConstants.CENTER);
		lblHttpgithubcomgusg.setBounds(10, 208, 409, 14);
		paneAbout.add(lblHttpgithubcomgusg);
	}

	public static void openWebpage(String urlString) {
	    try {
	        Desktop.getDesktop().browse(new URL(urlString).toURI());
	    } catch (Exception e) {
	        e.printStackTrace();
	        kBerry.throwError("GUI: Link not found! What happened to GitHub?!?");
	    }
	}
}
